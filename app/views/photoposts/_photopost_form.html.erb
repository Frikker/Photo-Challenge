<% @photos = PhotopostsHelper::Vkontakte.new(current_user).vk_photos['response']['items'] %>
<%= form_with(model: @photopost, authenticity_token: current_user.authenticity_token) do |f| %>
  <div class="field", style="margin-top: 1%">
    <%= f.text_area :content, placeholder: "Compose new photopost..." %>
  </div>
  <span>
    <%= f.file_field :picture, accept: "image/jpeg,image/gif,image/png", class: 'image' %>
    <%= f.hidden_field :remote_picture_url, id: 'photo_url' %>
    <%= image_tag '', alt: '', id: 'photo' %>
    <%= link_to 'Upload from VK', '#', class: 'vk_photo'%>
  </span>
  <%= f.submit "Post", class: "btn btn-primary", style: 'margin-top: 1%' %>
<% end %>

<%= render 'photoposts/vk_photos' %>

<script type="text/javascript">
    $(".image").bind("change", function() {
        const size_in_megabytes = this.files[0].size/1024/1024;
        if (size_in_megabytes > 5) {
            alert("Maximum file size is 5MB. Please choose a smaller file.");
            $(".image").val("");
        }
    });
    $('.image').click(function () {
        let vk = $('#photo')[0];
        vk.value = null;
        vk.type = 'hidden';
    })
    $('.vk_photo').click(function (event) {
        event.preventDefault();
        $('.vk-photos')[0].classList.add('is-shown');
        $('.overlay')[0].classList.add('is-shown');
    });
    $('.overlay').click(function () {
        $('.vk-photos')[0].classList.remove('is-shown');
        $('.overlay')[0].classList.remove('is-shown');
    })
    $('.modal__cross').click(function () {
        $('.vk-photos')[0].classList.remove('is-shown');
        $('.overlay')[0].classList.remove('is-shown');
    })
</script>